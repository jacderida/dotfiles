#!/usr/bin/env bash

function init_directories()
{
    [[ ! -d "$HOME/.vim/colors" ]] && mkdir -p ~/.vim/colors
    [[ ! -d "$HOME/.vim/syntax" ]] && mkdir -p ~/.vim/syntax
    [[ ! -d "$HOME/.vim/autoload" ]] && mkdir -p ~/.vim/autoload
    [[ ! -d "$HOME/.vim/bundle" ]] && mkdir -p ~/.vim/bundle
    [[ ! -d "$HOME/.vim/backup" ]] && mkdir -p ~/.vim/backup
    [[ ! -d "$HOME/.vim/tmp" ]] && mkdir -p ~/.vim/tmp
}

function install_vundle_plugin()
{
    if [ ! -d "$HOME/.vim/bundle/Vundle.vim" ]
    then
        git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
    else
        echo -e "${green}Already installed vundle${nc}"
    fi
}

function download_libclang()
{
    local present_path=$(pwd)
    local destination=$1
    [[ -d $destination ]] && rm -rf $destination
    mkdir -p $destination
    cd "/tmp"
    case $(uname -a) in
        *Ubuntu*)
            curl -O http://llvm.org/releases/3.4.1/clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04.tar.xz
            tar xvf clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04.tar.xz
            cp -r /tmp/clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04/** $destination
            rm -f clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04.tar.xz
            rm -rf clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04
            ;;
        *)
            echo "Setting up dependencies for YouCompleteMe: Unsupported OS encountered. Update get_libclang to support the current OS."
            exit 1
    esac
    cd $present_path
}

function install_cmake()
{
    case $(uname -a) in
        *Ubuntu*)
            sudo apt-get install -y python-dev
            sudo apt-get install -y cmake
            ;;
        *)
            echo "Setting up dependencies for YouCompleteMe: Unsupported OS encountered. Update install_cmake to support the current OS."
            exit 1
    esac
}

function setup_you_complete_me()
{
    if [ ! -e "$HOME/.vim/you_complete_me_is_setup" ]; then
        install_cmake
        local libclang_path="/tmp/libclang"
        local you_complete_me_path=$HOME/.vim/bundle/YouCompleteMe
        download_libclang $libclang_path
        local present_path=$(pwd)
        local ycm_build_path="$HOME/dev/ycm_build"
        mkdir -p $ycm_build_path
        cd $ycm_build_path
        cmake -G "Unix Makefiles" -DPATH_TO_LLVM_ROOT=$libclang_path . $you_complete_me_path/third_party/ycmd/cpp
        make ycm_support_libs
        touch $HOME/.vim/you_complete_me_is_setup
        cd $present_path
    fi
}

function install_manual_plugins()
{
    for plugin in `find ./vim/plugins -maxdepth 1 -type d`
    do
        echo -e "${green}Installing manual plugin $plugin ${nc}"
        cp -r $plugin/* ~/.vim
    done
}

function install_bundler_plugin()
{
    if [ ! -d "$HOME/.vim/bundle/vim-bundler" ]
    then
        git clone https://github.com/tpope/vim-bundler.git ~/.vim/bundle/vim-bundler
    else
        echo -e "${green}Already installed vim-bundler${nc}"
    fi
}

function setup_command_t_plugin()
{
    if [ ! -e  "$HOME/.vim/command_t_is_setup" ]; then
        present_directory=`pwd`
        cd ~/.vim/bundle/Command-T/ruby/command-t
        if [[ $(uname -s) != CYGWIN_NT-* ]]
        then
            [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
            rvm use 1.8.7
        else
            rvm use 1.9.1
        fi
        ruby extconf.rb
        if [[ $(uname -s) = CYGWIN_NT-* ]]; then
            # On Cygwin, replace
            # CFLAGS += -Wall -Wextra -Wno-unused-parameter
            # with
            # CFLAGS += -Wextra -Wno-unused-parameter
            # This switches off all warnings as errors. For some reason, on Cygwin, there's a weird 64 bit integer
            # warning that prevents successful compilation.
            sed -i 's/^CFLAGS +=.*/CFLAGS += -Wextra -Wno-unused-parameter/g' Makefile
        fi
        make
        touch $HOME/.vim/command_t_is_setup
        cd $present_directory
    fi
}

function install_plugins()
{
    install_manual_plugins
    install_vundle_plugin
    install_bundler_plugin
}

function install_files()
{
    echo -e "${green}Removing .vimrc and linking from dotfiles${nc}"
    rm -f ~/.vimrc
    ln -f ./vim/.vimrc ~/.vimrc
    echo -e "${green}Installing vim colours from dotfiles${nc}"
    cp ./vim/colors/*.* ~/.vim/colors
    echo -e "${green}Installing pathogen from dotfiles${nc}"
    cp ./vim/pathogen.vim ~/.vim/autoload
    cp ./vim/sh.vim ~/.vim/syntax
}

init_directories
install_files
install_vundle_plugin
vim +PluginInstall +qall
setup_command_t_plugin
setup_you_complete_me
install_plugins
